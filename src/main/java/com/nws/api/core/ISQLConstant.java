package com.nws.api.core;

public interface ISQLConstant {
	
	String GET_CONSUMER_AUTH_KEY = "select auth_key from TBL_ESB_MST_CONSUMER where is_active='Y' and consumer_code=?";
	String GET_GENERATE_TOKEN_FLAG = "select generate_token from TBL_ESB_MST_CHANNELS where is_active='Y' and whitelisted='Y' and esb_chnl_code=?";
	String GET_AUTH_KEY = "select auth_key from TBL_ESB_MST_CONSUMER  where is_active='Y' and CONSUMER_CODE =?";
	String GET_WHITELISTED_STATUS = "select WHITELISTED from TBL_ESB_MST_CONSUMER where is_active='Y' and consumer_code=?";
	
	String VALIDATE_MAPPING = "SELECT CASE WHEN UPPER(v.IS_ACTIVE)=UPPER('N') THEN '1005' WHEN UPPER(c.IS_ACTIVE)=UPPER('N') THEN '1004' "
			+ "WHEN UPPER(v.WHITELISTED)=UPPER('N') THEN '1009' WHEN UPPER(c.WHITELISTED)=UPPER('N') THEN '1011' "
			+ "WHEN NOT EXISTS (SELECT VENDOR_CODE FROM TBL_ESB_MAP_VENDOR_CHANNEL WHERE UPPER(VENDOR_CODE)=UPPER(?) and "
			+ "UPPER(ESB_CHNL_CODE)=UPPER(?) AND UPPER(WHITELISTED)=UPPER('Y') AND UPPER(IS_ACTIVE)=UPPER('Y')) THEN '1006' "
			+ "ELSE 'ACTIVE' END STATUS FROM TBL_ESB_MAP_VENDOR_CHANNEL m LEFT JOIN TBL_ESB_MST_VENDORS v ON m.VENDOR_CODE=v.VENDOR_CODE "
			+ "LEFT JOIN TBL_ESB_MST_CHANNELS c ON c.ESB_CHNL_CODE=m.ESB_CHNL_CODE WHERE UPPER(v.VENDOR_CODE)=UPPER(?) AND "
			+ "UPPER(c.ESB_CHNL_CODE)=UPPER(?) AND "
			+ "UPPER(c.WHITELISTED)=UPPER('Y') AND v.AUTH_KEY=? AND UPPER(v.WHITELISTED)=UPPER('Y')";
	
	String GET_SERVICE_DATA_ENCRYPTION = "SELECT DATA_ENCRYPTION FROM TBL_ESB_MST_SERVICES WHERE UPPER(ESB_SERVICE_CODE)=UPPER(?)";
	
	String GET_AGGREGATION_IS_SERVICE="SELECT IS_AGGREGATOR FROM TBL_ESB_MST_SERVICES WHERE UPPER(ESB_SERVICE_CODE)=UPPER(?)";
	
	String GET_AGGREGATION_STATUS_FROM_SUBREQUESTS_LOG="SELECT STATUS FROM TBL_ESB_TXN_AUDIT_SUB_REQUESTS_LOGS WHERE ID=(SELECT MAX(ID) FROM TBL_ESB_TXN_AUDIT_SUB_REQUESTS_LOGS) AND UPPER(ESB_SERVICE_CODE)=UPPER(?)";
	
	String GET_SERVICE_DATA_IS_DUPLICATE = "SELECT IS_REQUESTID_DUPLICATE FROM TBL_ESB_MST_SERVICES WHERE UPPER(ESB_SERVICE_CODE)=UPPER(?)";
	
	String GET_SERVICE_DATA_CHEAK_IF_RECORD_EXIST = "SELECT REQUEST_ID FROM TBL_ESB_TXN_AUDIT_LOGS WHERE REQUEST_ID=?";
	
	String GET_ALL_ERROR_CODES = "select error_code,error_msg from TBL_ESB_MST_ERRORS where is_active='Y'";
	
	String GET_CHECK_SERVICE_WHITELISTING ="SELECT m.CONSUMER_CODE, m.ESB_SERVICE_CODE, c.ESB_CATEGORY_CODE , s.DATA_ENCRYPTION, CASE \r\n"
			+ " WHEN UPPER(v.IS_ACTIVE)=UPPER('N') THEN 'INACTIVE CONSUMER'\r\n"
			+ " WHEN UPPER(s.IS_ACTIVE)=UPPER('N') THEN 'INACTIVE SERVICE'\r\n"
			+ " WHEN UPPER(c.IS_ACTIVE)=UPPER('N') THEN 'CATEGORY Inactive'\r\n"
			+ " WHEN UPPER(v.WHITELISTED)=UPPER('N') THEN 'CONSUMER BLOCKED'\r\n"
			+ " WHEN UPPER(c.WHITELISTED)=UPPER('N') THEN 'CATEGORY BLOCKED'\r\n"
			+ " WHEN UPPER(s.WHITELISTED)=UPPER('N') THEN 'Service is blocked'\r\n"
			+ "  WHEN NOT EXISTS (SELECT CONSUMER_CODE FROM TBL_ESB_MAP_CONSUMER_CATEGORY WHERE UPPER(CONSUMER_CODE)=UPPER(?) and UPPER(ESB_CATEGORY_CODE)=UPPER(?) AND UPPER(WHITELISTED)=UPPER('Y') AND UPPER(IS_ACTIVE)=UPPER('Y')) THEN 'CATEGORY BLOCKED FOR CONSUMER'\r\n"
			+ " ELSE 'ACTIVE' END STATUS\r\n"
			+ " FROM TBL_ESB_MAP_SERV_CONSUMER_CATEGORY m\r\n"
			+ " LEFT JOIN TBL_ESB_MST_CONSUMER v ON m.CONSUMER_CODE=v.CONSUMER_CODE\r\n"
			+ " LEFT JOIN TBL_ESB_MST_SERVICES s ON s.ESB_SERVICE_CODE =m.ESB_SERVICE_CODE \r\n"
			+ " LEFT JOIN TBL_ESB_MST_CATEGORY c ON c.ESB_CATEGORY_CODE=m.ESB_CATEGORY_CODE \r\n"
			+ "  WHERE UPPER(v.CONSUMER_CODE)=UPPER(?) AND UPPER(s.ESB_SERVICE_CODE)=UPPER(?)\r\n"
			+ " AND UPPER(c.ESB_CATEGORY_CODE)=UPPER(?) AND UPPER(m.WHITELISTED)=UPPER('Y') AND UPPER(m.IS_ACTIVE)=UPPER('Y')";
	
	
   String INSERT_INTO_AUDIT_LOGS= "INSERT INTO TBL_ESB_TXN_AUDIT_LOGS(ID,REQUEST_ID,ESB_SERVICE_CODE,CONSUMER_CODE,REQUEST_TIME,RESPONSE_TIME,"
			+ "RESPONSE_CODE,RESPONSE_MSG,STATUS,CREATED_DATE,CREATED_BY,IS_ACTIVE,REQUEST_MSG,REQUEST_URL,REMARKS,"
			+ "TARGET_REQUEST_TIME,TARGET_REQUEST_MSG,TARGET_RESPONSE_TIME,TARGET_RESPONSE_MSG,TARGET_RESPONSE_CODE,ESB_CATEGORY_CODE,REQUEST_PARAMS,ESB_REQUEST_ID) VALUES "
			+ "(SEQ_ESB_TXN_AUDIT_LOGS.nextval,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
   
   String INSERT_INTO_SUBREQUESTS_AUDIT_LOGS= "INSERT INTO TBL_ESB_TXN_AUDIT_SUB_REQUESTS_LOGS(ID,REQUEST_ID,ESB_SERVICE_CODE,CONSUMER_CODE,REQUEST_TIME,RESPONSE_TIME,"
			+ "RESPONSE_CODE,RESPONSE_MSG,STATUS,CREATED_DATE,CREATED_BY,IS_ACTIVE,REQUEST_MSG,REQUEST_URL,REMARKS,"
			+ "TARGET_REQUEST_TIME,TARGET_REQUEST_MSG,TARGET_RESPONSE_TIME,TARGET_RESPONSE_MSG,TARGET_RESPONSE_CODE,ESB_CATEGORY_CODE,PARENT_REQUEST_ID,CALL_SEQUENCE,REQUEST_PARAMS,ESB_REQUEST_ID) VALUES "
			+ "(SEQ_ESB_TXN_AUDIT_SUB_REQUESTS_LOGS.nextval,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
   

	String INSERT_INTO_ORACLE_DB="INSERT INTO AMR_ALARM_DATA(ID, SERVICE_POINT, BADGE_NUMBER, ALERT_TYPE, ALERT_DESC, MESSAGE_DATE, MESSAGE_TEXT, BATCH_ID)\r\n"
			+ "VALUES (SEQ_AMR_ALARM_DATA.nextval,?,?,?,?,?,?,?)";
	
	String INSERT_INTO_SQLSERVER="INSERT INTO AMR_ALARM_DATA(SERVICE_POINT, BADGE_NUMBER, ALERT_TYPE, ALERT_DESC, MESSAGE_DATE, MESSAGE_TEXT, BATCH_ID)\r\n"
			+ "VALUES (?,?,?,?,?,?,?)";
   
   String GET_AUTHENTICATION_HEADER = "SELECT USERNAME,PASSWORD FROM TBL_DASH_MST_SERVER_INFO WHERE IS_ACTIVE='Y' AND SERVER_STATUS='ACTIVE' AND SERVER_TYPE='SMS_SERVER'";
   
   
   
   String INSERT_INTO_MM_ORACLE_DB="INSERT INTO REQUESTS(REQUEST_ID,ACTUAL_PULL_DATE,CONSTRUCTION_PERMIT_NUMBER,"
   		+ "OWNER_ID,OWNER_EN_NAME,OWNER_AR_NAME,PHONE,CR_NUMBER,WORK_START_ID,WORK_START_DATE_ISSUED,WILLAYATH,AREA,"
   		+ "AREA_WAY,WAY_NAME,AREA_SIZE,BLOCK_NAME,PLOT_NUMBER,PLOT_TYPE,PREMISE_TYPE,SOCIAL_BENEFIT_NO,SOCIAL_BENEFIT_ISSUED_DATE,"
   		+ "WATER_NETWORK,NO_OF_FAMILY_MEMBERS,OWNER_TYPE,NEAREST_WATER_CONNECTION,BUILDING_PERMIT_NUMBER,BUILDING_NUMBER,"
   		+ "GOVERNORATE,OWNER_CLASS,PHONE_TYPE,PRIMARY_VAL,RECEIVE_BILL,REGION,RELATIONSHIP_TYPE,REQUEST_TYPE,SP_TYPE,SUB_AREA,"
   		+ "TRNS_FRM_PREVIOUS_PRIVATE_NTK,WORK_COMPLETION_DATE_ISSUED,CS_REQTY,WORK_COMPLETION_ID,MM_SERV_TYPE,PARENT,MM_OWNER_CODE) "
   		+ "values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
   
   
   String UPDATE_MEDC_REQUESTS_TABLE="UPDATE REQUESTS SET EMAIL_ID=?,OWNER_EN_NAME=?,WILLAYATH=?,COORDINATE_N1=?,COORDINATE_N2=?,COORDINATE_E1=?,COORDINATE_E2=?,OWNER_ALTERNATE_CONTACT_NO=?,MEDC_ID_CARD=? WHERE OWNER_ID=? AND REQUEST_ID=?";
   
   
   String UPDATE_MM_DATA_REQUESTS_TABLE="UPDATE REQUESTS SET CROOKIE_NUMBER=?,LAND_AREA=?,CERTIFIED_BUILDING_AREA=?,ALLOWED_PERCENTAGE=? WHERE OWNER_ID=? AND REQUEST_ID=?";
   
   
   String UPDATE_MOSD_DATA_INTO_ORACLE_DB="UPDATE REQUESTS SET NO_OF_FAMILY_MEMBERS=?,SOCIAL_BENEFIT_ISSUED_DATE=?,SOCIAL_BENEFIT_NO=? WHERE  OWNER_ID=? AND REQUEST_ID=?";
   
   String UPDATE_GISDETAILS_INTO_ORACLE_DB="UPDATE REQUESTS SET DMA_NAME=?,NEAREST_WATER_CONNECTION=?,WATER_NETWORK=? WHERE OWNER_ID=? AND REQUEST_ID=?";
   
   String UPDATE_MEDC_REQUESTS_TABLE_AFTER_EXECUTION_OF_SCHEDULAR="UPDATE REQUESTS SET OWNER_EN_NAME=?,COORDINATE_N1=?,COORDINATE_N2=?,COORDINATE_E1=?,COORDINATE_E2=?,MEDC_ID_CARD=? WHERE BUILDING_PERMIT_NUMBER=?";
   
   String INSERT_MMDATA_INTO_REQUESTS_TABLE_AFTER_EXECUTION_OF_SCHEDULAR="INSERT INTO REQUESTS(REQUEST_ID,CROOKIE_NUMBER,LAND_AREA,CERTIFIED_BUILDING_AREA,ALLOWED_PERCENTAGE,MM_SERV_TYPE) VALUES (?,?,?,?,?,?)";


}
